# Define all the constants (masks) as provided
SYS_STATUS_IRQS = 0x00000001
SYS_STATUS_CPLOCK = 0x00000002
SYS_STATUS_ESYNCR = 0x00000004
SYS_STATUS_AAT = 0x00000008
SYS_STATUS_TXFRB = 0x00000010
SYS_STATUS_TXPRS = 0x00000020
SYS_STATUS_TXPHS = 0x00000040
SYS_STATUS_TXFRS = 0x00000080
SYS_STATUS_RXPRD = 0x00000100
SYS_STATUS_RXSFDD = 0x00000200
SYS_STATUS_LDEDONE = 0x00000400
SYS_STATUS_RXPHD = 0x00000800
SYS_STATUS_RXPHE = 0x00001000
SYS_STATUS_RXDFR = 0x00002000
SYS_STATUS_RXFCG = 0x00004000
SYS_STATUS_RXFCE = 0x00008000
SYS_STATUS_RXRFSL = 0x00010000
SYS_STATUS_RXRFTO = 0x00020000
SYS_STATUS_LDEERR = 0x00040000
SYS_STATUS_RXOVRR = 0x00100000
SYS_STATUS_RXPTO = 0x00200000
SYS_STATUS_GPIOIRQ = 0x00400000
SYS_STATUS_SLP2INIT = 0x00800000
SYS_STATUS_RFPLL_LL = 0x01000000
SYS_STATUS_CLKPLL_LL = 0x02000000
SYS_STATUS_RXSFDTO = 0x04000000
SYS_STATUS_HPDWARN = 0x08000000
SYS_STATUS_TXBERR = 0x10000000
SYS_STATUS_AFFREJ = 0x20000000
SYS_STATUS_HSRBP = 0x40000000
SYS_STATUS_ICRBP = 0x80000000
SYS_STATUS_RXRSCS = 0x0100000000
SYS_STATUS_RXPREJ = 0x0200000000
SYS_STATUS_TXPUTE = 0x0400000000


def parse(hex_value: int):
    # Decode the hex value using the masks
    decoded_status = {
        "SYS_STATUS_IRQS": bool(hex_value & SYS_STATUS_IRQS),
        "SYS_STATUS_CPLOCK": bool(hex_value & SYS_STATUS_CPLOCK),
        "SYS_STATUS_ESYNCR": bool(hex_value & SYS_STATUS_ESYNCR),
        "SYS_STATUS_AAT": bool(hex_value & SYS_STATUS_AAT),
        "SYS_STATUS_TXFRB": bool(hex_value & SYS_STATUS_TXFRB),
        "SYS_STATUS_TXPRS": bool(hex_value & SYS_STATUS_TXPRS),
        "SYS_STATUS_TXPHS": bool(hex_value & SYS_STATUS_TXPHS),
        "SYS_STATUS_TXFRS": bool(hex_value & SYS_STATUS_TXFRS),
        "SYS_STATUS_RXPRD": bool(hex_value & SYS_STATUS_RXPRD),
        "SYS_STATUS_RXSFDD": bool(hex_value & SYS_STATUS_RXSFDD),
        "SYS_STATUS_LDEDONE": bool(hex_value & SYS_STATUS_LDEDONE),
        "SYS_STATUS_RXPHD": bool(hex_value & SYS_STATUS_RXPHD),
        "SYS_STATUS_RXPHE": bool(hex_value & SYS_STATUS_RXPHE),
        "SYS_STATUS_RXDFR": bool(hex_value & SYS_STATUS_RXDFR),
        "SYS_STATUS_RXFCG": bool(hex_value & SYS_STATUS_RXFCG),
        "SYS_STATUS_RXFCE": bool(hex_value & SYS_STATUS_RXFCE),
        "SYS_STATUS_RXRFSL": bool(hex_value & SYS_STATUS_RXRFSL),
        "SYS_STATUS_RXRFTO": bool(hex_value & SYS_STATUS_RXRFTO),
        "SYS_STATUS_LDEERR": bool(hex_value & SYS_STATUS_LDEERR),
        "SYS_STATUS_RXOVRR": bool(hex_value & SYS_STATUS_RXOVRR),
        "SYS_STATUS_RXPTO": bool(hex_value & SYS_STATUS_RXPTO),
        "SYS_STATUS_GPIOIRQ": bool(hex_value & SYS_STATUS_GPIOIRQ),
        "SYS_STATUS_SLP2INIT": bool(hex_value & SYS_STATUS_SLP2INIT),
        "SYS_STATUS_RFPLL_LL": bool(hex_value & SYS_STATUS_RFPLL_LL),
        "SYS_STATUS_CLKPLL_LL": bool(hex_value & SYS_STATUS_CLKPLL_LL),
        "SYS_STATUS_RXSFDTO": bool(hex_value & SYS_STATUS_RXSFDTO),
        "SYS_STATUS_HPDWARN": bool(hex_value & SYS_STATUS_HPDWARN),
        "SYS_STATUS_TXBERR": bool(hex_value & SYS_STATUS_TXBERR),
        "SYS_STATUS_AFFREJ": bool(hex_value & SYS_STATUS_AFFREJ),
        "SYS_STATUS_HSRBP": bool(hex_value & SYS_STATUS_HSRBP),
        "SYS_STATUS_ICRBP": bool(hex_value & SYS_STATUS_ICRBP),
        "SYS_STATUS_RXRSCS": bool(hex_value & SYS_STATUS_RXRSCS),
        "SYS_STATUS_RXPREJ": bool(hex_value & SYS_STATUS_RXPREJ),
        "SYS_STATUS_TXPUTE": bool(hex_value & SYS_STATUS_TXPUTE),
    }

    for key, value in decoded_status.items():
        if value:
            print(f"{key}")


parse(0x00800072)
